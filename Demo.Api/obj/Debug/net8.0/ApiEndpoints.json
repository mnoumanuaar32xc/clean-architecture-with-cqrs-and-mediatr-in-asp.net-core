[
  {
    "ContainingType": "Demo.Api.Controllers.v1.Authentication.AuthenticationController",
    "Method": "LoginAsync",
    "RelativePath": "api/Authentication/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "DemoApplication.App.Authentication.Commands.LoginCommand.LoginCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Demo.Api.ApiFramework.Tools.ApiResult\u00601[[DemoApplication.App.Authentication.DTOs.LoginResponseDTO, DemoApplication, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Demo.Api.Controllers.v1.Authentication.AuthenticationController",
    "Method": "LoginAsync",
    "RelativePath": "api/v{version}/v1/Authentication/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "DemoApplication.App.Authentication.Commands.LoginCommand.LoginCommand",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Demo.Api.ApiFramework.Tools.ApiResult\u00601[[DemoApplication.App.Authentication.DTOs.LoginResponseDTO, DemoApplication, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Demo.Api.Controllers.v1.Employees.EmployeesController",
    "Method": "GetEmployeeCompanyDetailsAsync",
    "RelativePath": "api/v{version}/v1/Employees/GetEmployeeCompanyDetails",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "EployeeCardNumber",
        "Type": "System.Int64",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "SortColumn",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "SortOrder",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "SearchKeyword",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Demo.Api.ApiFramework.Tools.PagedApiResult\u00601[[System.Collections.Generic.List\u00601[[DemoApplication.App.Employees.DTOs.EmployeeCompanyDetailsDTO, DemoApplication, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Demo.Api.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Demo.Api.WeatherForecast, Demo.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]